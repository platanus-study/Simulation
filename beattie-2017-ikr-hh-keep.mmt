[[model]]
name: beattie-2017-iKr-hhi
author: Young-Seon Lee

# Initial values
ikr.C = 1
ikr.O_Kr = 0
ikr.I1 = 0
ikr.I2 = 0

#
# Simulation engine variables
[engine]
time = 0 bind time
pace = 0 bind pace

#
# Membrane potential
#
[membrane]
V = engine.pace
    desc: membane potential
    in [mV]

[nernst]
EK = -85 [mV]

[ikr]
use membrane.V

IKr = g * O_Kr * (V - nernst.EK)

IC = 1-(C + O_Kr + I1 + I2)

k1 = p1 * exp(p2 * V)
k2 = p3 * exp(-p4 * V)
k3 = p5 * exp(p6 * V)
k4 = p7 * exp(-p8 * V)
k5 = p9 * exp(p10 * V)
k6 = p11 * exp(-p12 * V)

dot(C)=-(k1+k3)*C +k2*O_Kr +k4*IC
dot(O_Kr)= -(k2+k3)*O_Kr + k1*C +k4*I1
dot(I1) = -(k2 +k4 + k5)*I1 +k3*O_Kr +k1*IC +k6*I2
dot(I2)= - k6*I2 +k5*I1 

p1 = 2.26e-4 [1/ms]
p2 = 0.0699 [1/mV]
p3 = 3.45e-5 [1/ms]
p4 = 0.05462 [1/mV]
p5 = 0.0873 [1/ms]
p6 = 0.0891 [1/mV]
p7 = 5.15e-3 [1/ms]
p8 = 0.03158 [1/mV]
p9 = 5.15e-4 [1/ms]
p10 = 0.03158 [1/mV]
p11 = 0.1685 [1/ms]
p12 = 3.158e-4 [1/mV]
p13 = 0.1524 [uS]
g = p13

[[script]]
import myokit
import myokit.pacing as pacing
import numpy as np
import matplotlib
import matplotlib.pyplot as pl

#
# Simple IKr test script
#

# Get model
m = get_model()

# Create pacing protocol
v = np.arange(-100, 50 + 10, 10)
p = pacing.steptrain(
        vsteps=v,
        vhold=-80,
        tpre=2000,
        tstep=5000,
        tpost=3000)

d = [
    'engine.time',
    'membrane.V',
    'ikr.IKr',
    ]

# Run simulation
s = myokit.Simulation(m, p)
d = s.run(p.characteristic_time(), log=d)

# Create colormap for plotting
cmap = matplotlib.cm.get_cmap('viridis')
norm = matplotlib.colors.Normalize(0, len(v))

# Plot data as overlapping steps
d2 = d.npview()
d2 = d2.regularize(0.1)
d2 = d2.fold(10000)
pl.figure()
for k in xrange(len(v)):
    pl.subplot(2,1,1)
    pl.plot(d2.time(), d2['membrane.V', k], color=cmap(norm(k)))
    pl.subplot(2,1,2)
    pl.plot(d2.time(), d2['ikr.IKr', k], color=cmap(norm(k)))
pl.show()

